---
# Install NUT devices and server and configure UFW firewall rules.

- name: Get USB devices
  tags: always
  command: lsusb
  register: lsusb_result
  changed_when: false

# - debug: var=lsusb_result

- name: Create UPS devices list
  tags: always
  set_fact:
    ups_devices: "{{ lsusb_result.stdout_lines | select('match', nut_matcher) | list | sort }}"

- name: UPS devices
  debug: var=ups_devices

- name: Create NUT UPS configurations
  template:
    src: "templates/{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: "{{ nut_group }}"
    mode: 0640
  register: ups_configs_result
  with_items:
    - etc/nut/ups.conf
    - etc/nut/ups-heartbeat.conf
    - etc/nut/upsd.conf
    - etc/nut/upsd.users

- name: Update NUT configuration mode
  lineinfile:
    path: /etc/nut/nut.conf
    regexp: "^MODE="
    line: "MODE=netserver"
  register: nut_config_result

- name: Reboot server
  reboot:
  when: ups_configs_result.changed or nut_config_result.changed

- name: Add UFW firewall rules
  community.general.ufw:
    rule: allow
    src: "{{ network_cidr }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  with_items:
    - { port: "{{ nut_port }}", proto: "tcp" }

- name: Validation
  block:
    - name: Validate upsc client returns all UPS devices
      command: upsc -L localhost
      register: upsc_result
      changed_when: false
      failed_when: ups_devices | length != upsc_result.stdout_lines | select('match', '^ups-[0-9]+') | list | length

    - name: Validate upsc client returns all UPS heartbeat devices
      command: upsc -L localhost
      register: upsc_result
      changed_when: false
      failed_when: 1 != upsc_result.stdout_lines | select('match', '^ups-H+') | list | length
      when: heartbeat_enabled | bool

  tags: validate
